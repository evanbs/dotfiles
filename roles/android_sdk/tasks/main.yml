---
- name: Create Android SDK root directory
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/Android"
    state: directory
    owner: "{{ dev_username }}"
    group: "{{ dev_username }}"
    mode: '0755'
  become: yes

- name: Download Android command-line tools
  ansible.builtin.get_url:
    url: https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
    dest: "/tmp/commandlinetools-linux-latest.zip"
    mode: '0644'
  become: no

- name: Create temporary directory for command-line tools extraction
  ansible.builtin.file:
    path: "/tmp/android-tools-extract"
    state: directory
    owner: "{{ dev_username }}"
    group: "{{ dev_username }}"
    mode: '0755'
  become: yes

- name: Unarchive command-line tools to temporary location
  ansible.builtin.unarchive:
    src: "/tmp/commandlinetools-linux-latest.zip"
    dest: "/tmp/android-tools-extract"
    remote_src: yes
    owner: "{{ dev_username }}"
    group: "{{ dev_username }}"
  become: yes

- name: Find the extracted cmdline-tools directory
  ansible.builtin.find:
    paths: "/tmp/android-tools-extract"
    patterns: "cmdline-tools"
    file_type: directory
  register: extracted_cmdline_tools_dir

- name: Move extracted cmdline-tools contents to final destination
  ansible.builtin.command: mv {{ extracted_cmdline_tools_dir.files[0].path }}/* {{ ansible_env.HOME }}/Android/cmdline-tools/
  args:
    creates: "{{ ansible_env.HOME }}/Android/cmdline-tools/bin/sdkmanager"
  become: yes
  when: extracted_cmdline_tools_dir.files[0].path is defined and (extracted_cmdline_tools_dir.files[0].path | list | length > 0)

- name: Clean up temporary extraction directory
  ansible.builtin.file:
    path: "/tmp/android-tools-extract"
    state: absent
  become: yes

- name: Ensure 'latest' directory exists for cmdline-tools
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/Android/cmdline-tools/latest"
    state: directory
    owner: "{{ dev_username }}"
    group: "{{ dev_username }}"
    mode: '0755'
  become: yes

- name: Check if cmdline-tools directory has contents before moving to 'latest'
  ansible.builtin.find:
    paths: "{{ ansible_env.HOME }}/Android/cmdline-tools"
    file_type: any
    recurse: no
  register: cmdline_tools_contents

- name: Move contents of cmdline-tools to 'latest' subdirectory
  ansible.builtin.command: mv {{ ansible_env.HOME }}/Android/cmdline-tools/* {{ ansible_env.HOME }}/Android/cmdline-tools/latest/
  args:
    creates: "{{ ansible_env.HOME }}/Android/cmdline-tools/latest/bin/sdkmanager"
  become: yes
  when: cmdline_tools_contents.files | length > 0

- name: Set ANDROID_HOME and update PATH in .zshrc
  ansible.builtin.blockinfile:
    path: "/home/{{ dev_username }}/.zshrc"
    block: |
      export ANDROID_HOME="{{ ansible_env.HOME }}/Android"
      export PATH="$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools"
    marker: "# {mark} ANSIBLE MANAGED BLOCK for Android SDK"
    create: yes
    owner: "{{ dev_username }}"
    group: "{{ dev_username }}"
    mode: '0644'
  become: yes

- name: Install Android SDK components using community.general.android_sdk
  community.general.android_sdk:
    name:
      - "platform-tools"
      - "platforms;android-34"
      - "build-tools;34.0.0"
      - "emulator"
      - "system-images;android-34;default;x86_64"
    sdk_root: "{{ ansible_env.HOME }}/Android"
    accept_licenses: true
    state: present
  become_user: "{{ dev_username }}"
  environment:
    JAVA_HOME: "{{ ansible_env.HOME }}/.sdkman/candidates/java/current" # Use 'current' for SDKMAN
    ANDROID_HOME: "{{ ansible_env.HOME }}/Android"
    PATH: "{{ ansible_env.PATH }}:{{ ansible_env.HOME }}/Android/cmdline-tools/latest/bin:{{ ansible_env.HOME }}/Android/platform-tools"